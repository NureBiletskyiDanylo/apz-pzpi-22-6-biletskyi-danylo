Міністерство освіти і науки України
Харківський національний  університет радіоелектроніки

Кафедра програмної інженерії



ЗВІТ
з лабораторної роботи №5
з дисципліни «Архітектура програмного забезпечення»


Виконав:	Перевірив:
ст. гр. ПЗПІ-22-6	ст. викл. каф. ПІ
Білецький Д. А.	Сокорчук І.П.






Харків 2025
1 ІСТОРІЯ ЗМІН
Таблиця 1 – Історія змін 
№	Дата	Версія звіту	Опис змін та виправлень
1	01.06.2025	0.1	Створено розділ «Історія змін»
2	01.06.2025	0.1	Створено розділ «Завдання»
3	01.06.2025	0.1	Створено розділ «Опис виконаної роботи»
4	01.06.2025	0.1	Створено розділ «Висновки»
5	01.06.2025	0.1	Доданий Додаток А

 
2 ЗАВДАННЯ
1.	Необхідно розгорнути програмний застосунок.
2.	Проаналізуйте завдання.
3.	Виконайте контрольні завдання.
4.	Відкрийте створений на попередній лабораторній роботі репозиторій GitHub.
5.	Створіть у репозиторії директорію Task5 та текстовий файл з описом інженерних рішень у цій частині проєкту, як вказано у додатку З
6.	Зафіксуйте кожну внесену зміну командою git commit з відповідним коментарем та фіксуйте цією командою усі наступні зміни у проєкті.
7.	Створіть у директорії Task5 піддиректорію для програмного коду, як вказано у додатку З
8.	Створіть програмний код, завантажте його у створену піддиректорію, зафіксуйте внесені у репозиторій зміни
9.	Виконайте функціональне тестування створеного програмного коду та створіть відеозапис цього тестування тривалістю 7..10 хвилин з усними поясненнями процесу тестування
10.	Завантажте створений відеозапис тестування YouTube канал для вашого облікового запису в домені @nure.ua
11.	Створіть для завантаженого запису його хронологічний опис.
12.	Оформіть звіт у форматі pdf та завантажте його на навчальну платформу https://dl.nure.ua/
13.	У коментарях до завантаженого звіту вкажіть посилання на відеозапис тестування у вашому каналі YouTube. 
3 ОПИС ВИКОНАНОЇ РОБОТИ
Серверна частина програмної системи написана мовою програмування C# та використовує фреймворк ASP.NET Core. Для зберігання даних використовується база даних PostgreSQL. Для доступу до бази даних використовується Entity Framework Core, як ORM. 
Для керування версіями коду використовується система контролю версій Git.
Весь код програмної системи доступний у репозиторії за посиланням: https://github.com/NureBiletskyiDanylo/apz-pzpi-22-6-biletskyi-danylo/tree/main.
Для розгортання серверної частини програмної системи використовується хмарна платформа Azure. Для початку необхідно налаштувати та розгорнути базу даних. Для цього необхідно створити акаунт Azure, далі створити resource group під назвою MediStoS. Після цього необхідно створити новий гнучкий сервер бази даних (Azure Database for PostgreSQL - Flexible Server). Після його створення та обрання налаштувань системи, можна створити базу даних під назвою medistosdb. Такі дані як: server name; server admin login name; password, необхідно використовувати для налаштування з’єднання API та бази даних.
Після розгортання бази даних в Azure можна перейти до розгортання серверної частини, а саме API. Для початку необхідно клонувати репозиторій проєкту, а саме: https://github.com/NureBiletskyiDanylo/apz-pzpi-22-6-biletskyi-danylo/tree/main. Після його клонування проект необхідно відкрити за допомогою Visual Studio. Після відкриття необхідно оновити дані apisettings.json до бажаних. Наступним необхідним кроком є вхід до акаунту Microsoft, де розташований Azure. Далі, опублікувавши серверну частину в Azure у resource group MediStoS ми завершуємо розгортання серверної частини.
Після розгортання продукту, для міграції даних необхідно використовувати інструмент PgAdmin 4, створений спеціально для бази даних PostgreSQL. За допомогою нього, є можливість напряму підключитися до серверу бази даних в Azure, та завантажити дані з .sql резервної копії чи з інших. Отримати .sql резервну копію можна або за допомогою цього ж інструменту PgAdmin 4, або за допомогою ендпоінту api.
 
4 ВИСНОВКИ
Під час виконання лабораторної роботи було розгорнуто серверну та веб частини програмної системи. 
ДОДАТОК А
Відеозапис та хронологічний опис

Відеозапис доповіді на YouTube: https://youtu.be/8c4vJizaYp4
Хронологічний опис відеозапису:
0:00 - Вступ
0:18 - Створення акаунту користувача
0:50 - Огляд інтерфейсу головної сторінки препаратів
1:16 - Створення препарату
2:02 - Перегляд інформації про препарат
2:10 - Створення поставки препарату зі сторінки певного препарату
2:40 - Огляд інтерфейсу головної сторінки складських приміщень
2:50 - Створення нового складського приміщення
3:30 - Створення поставки препарату зі сторінки складського приміщення
4:00 - Редагування даних про поставку
4:15 - Створення сенсору у складському приміщенні
4:56 - Робота ІоТ клієнту
6:03 - Адміністративна функціональність взаємодії з користувацькими обліковими записами
7:09 - Адміністративна функціональність взаємодії з базою даних
7:49 - Демонстрація авторизації у мобільному застосунку
8:11 - Демонстрація інтерфейсу головної сторінки мобільного застосунку
8:35 - Демонстрація інтерфейсу сторінки складського приміщення у мобільному застосунку
9:03 - Перевірка синхронізації даних сенсорів у мобільному та веб-застосунках при роботі ІоТ клієнта
Посилання на Github: https://github.com/NureBiletskyiDanylo/apz-pzpi-22-6-biletskyi-danylo/tree/main/Lab5

