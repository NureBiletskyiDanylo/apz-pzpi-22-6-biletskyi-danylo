Міністерство освіти і науки України
Харківський національний  університет радіоелектроніки

Кафедра програмної інженерії



ЗВІТ
з практичної роботи №2
з дисципліни «Архітектура програмного забезпечення»


Виконав:	Перевірив:
ст. гр. ПЗПІ-22-6	ст. викл. каф. ПІ
Білецький Д.А.	Сокорчук І.П.






Харків 2025
1 ІСТОРІЯ ЗМІН
Таблиця 1 – Історія змін 
№	Дата	Версія звіту	Опис змін та виправлень
1	12.05.2025	0.1	Створено розділ «Історія змін»
2	12.05.2025	0.1	Створено розділ «Завдання»
3	12.05.2025	0.1	Додано слайди презентації у додаток Б
5	12.05.2025	0.1	Створено розділ «Опис виконаної роботи»
6	12.05.2025	0.1	Створено розділ «Висновки»
7	12.05.2025	0.1	Додано посилання на відеозапис та хронологічний опис доповіді у додаток А

 
2 ЗАВДАННЯ
1.	Підготувати доповідь про архітектуру однієї з відомих складних програмних систем.
2.	Створити та оформити слайди презентації доповіді.
3.	Створити та опублікувати на YouTube відеозапис доповіді.
4.	Оформити та завантажити на dl.nure.ua звіт до виконаної роботи
5.	При потребі створити та налаштувати у GitHub обліковий запис для облікового запису студента в домені @nure.ua.
6.	Створити для виконання завдань з дисципліни GitHub репозиторій iз вказаним на https://dl.nure.ua іменем та з головною гілкою main.
7.	Створити у корені створеного репозиторію файл README.md з вказаним далі змістом та вказані далі директорії для окремих завдань.
8.	Експортувати звіт у файл у простому текстововому форматі та завантажити цей файл у директорію Pract2 у репозиторії GitHub.
9.	Завантажити у вказану далі піддиректорію увесь програмний код, який розглядається у доповіді ПЗ2.
 
3 ОПИС ВИКОНАНОЇ РОБОТИ
Stack Overflow — популярна веб-система питань і відповідей для програмістів та ентузіастів. Це приватний вебсайт, основний у мережі Stack Exchange Network, створений у 2008 році. На цьому сайті знаходяться питання та відповіді широкого спектра тем, пов’язаних із програмуванням.
Особисто я вважаю Stack Overflow унікальним явищем у цифровій культурі. Його ефективність полягає не лише у швидкому вирішенні технічних проблем, а й у формуванні глобальної спільноти, де обмін знаннями став щоденною практикою. Сайт функціонує за моделлю краудсорсингу: користувачі ставлять запитання, інші відповідають, і найкращі відповіді піднімаються вище завдяки системі голосування. Це дозволяє оперативно знаходити перевірені рішення, а також сприяє самонавчанню.
Я неодноразово звертався до Stack Overflow під час вивчення нових мов програмування або при розв’язанні нестандартних завдань. Навіть коли питання вже поставлене кимось іншим, ймовірність знайти схожий випадок із розгорнутою відповіддю дуже висока.
В основі Stack Overflow лежить монолітна архітектура. Це означає, що більшість компонентів платформи — як бекенд, так і фронтенд — реалізовані в єдиному програмному блоці. На перший погляд, це може здаватися застарілим підходом у світі мікросервісів, однак, як показує приклад Stack Overflow, добре спроєктований моноліт здатен забезпечувати стабільну та ефективну роботу навіть під великим навантаженням.
Уся платформа спирається лише на дев’ять веб-серверів, що є вражаюче малим числом, враховуючи глобальний масштаб проєкту, кількість активних користувачів і обсяг оброблюваних запитів. Такий результат став можливим завдяки глибокій оптимізації і, передусім, грамотному використанню кешування.
Основа ефективності Stack Overflow — кешування на всіх рівнях: від запитів до бази даних до збереження HTML-сторінок. Це дозволяє зменшити кількість повторних обчислень і максимально швидко обслуговувати запити користувачів.
Чому саме монолітна архітектура?
o	Системи з монолітною архітектурою простіше розробляти, тестувати та розгортати.
o	Для платформ «питання-відповідь», керування щільно пов’язаних систем стає простішим, використовуючи монолітну архітектуру.
o	Використання моноліту з меншою кількістю серверів значно зменшує витрати на інфраструктуру.
o	З меншою кількістю «рухомих частин», продуктивність легше контролювати та оптимізувати.
Як досягається ефективність у Stack Overflow?
o	Система з самого початку проєктувалась із метою забезпечення мінімальної затримки між запитами користувачів та зменшеного споживання пам’яті при кожному запиті.
o	Також, Веб-сервери Stack Overflow стабільно функціонують, займаючи лише 5–10% доступного дискового простору, що залишає значний резерв для майбутнього масштабування без потреби негайного розширення інфраструктури.
o	SQL-сервери платформи мають загалом 1,5 ТБ оперативної пам’яті, завдяки чому приблизно третина всієї бази даних знаходиться безпосередньо в пам’яті. Це дозволяє значно прискорити доступ до даних без потреби постійного звертання до диску.
o	Навіть для найбільш відвідуваних сторінок — наприклад, списку питань — час генерації відповіді на сервері зазвичай не перевищує 20 мілісекунд. Це стало можливим завдяки ефективному кешуванню HTML, SQL-запитів і цілеспрямованій оптимізації коду.
На поточний момент, у Stack Overflow за офіційними джерелами зареєстровано понад 29 мільйонів користувачів. При цьому варто знати, що понад 80% користувачів, котрі заходять на цю платформу не мають акаунту. Це дозволяє уявити, на скільки реально велика кількість відвідувань.
Самі ж сторінки Stack Overflow, з появою штучного інтелекту ChatGPT, стали менш популярними для відвідування людьми. Наразі, на місяць близько 88 мільйонів разів відкриваються сторінки цієї платформи..
Основною мовою програмування є C#, а платформа побудована на основі Microsoft .NET 6.0 — сучасної, кросплатформної технології, яка забезпечує високу швидкодію та підтримує асинхронну обробку запитів, що критично важливо для масштабних вебзастосунків. У ролі веб-фреймворку виступає ASP.NET Core 6.0, що дозволяє будувати надійні серверні сервіси з низькою затримкою.
Для побудови динамічного інтерфейсу на стороні сервера застосовується механізм перегляду Razor, який поєднує HTML і C# у компактному та читабельному вигляді. Клієнтська частина, попри появу сучасних JavaScript-фреймворків, все ще ґрунтується на jQuery — легкому та перевіреному інструменті, достатньому для підтримки інтерактивності без зайвої складності.
Особливу увагу приділено кешуванню: для збереження результатів запитів та зменшення навантаження на базу даних використовується Redis — високопродуктивне in-memory сховище, яке відіграє ключову роль у досягненні швидкодії платформи.
Контроль версій реалізовано через Git у поєднанні з GitHub Enterprise, що дозволяє підтримувати корпоративний рівень безпеки та централізованого керування кодом.
Для зберігання даних Stack Overflow використовує чотири сервери Microsoft SQL Server, що забезпечують високу доступність та масштабованість при обробці великої кількості запитів. Взаємодія з базою даних відбувається через два основних інструменти: Entity Framework (EF) — ORM, що дозволяє працювати з базою даних через об'єкти C#, та Dapper, який є більш легким та швидким маппером для SQL-запитів. Цей підхід дозволяє поєднувати зручність роботи з ORM і високу продуктивність при складних запитах.
Використані джерела:
Stack Overflow Architecture: Myth vs Reality:
https://noncodersuccess.medium.com/stack-overflow-architecture-myth-vs-reality-93c77ec8d213
Stack Overflow: The Architecture - 2016 Edition:
https://nickcraver.com/blog/2016/02/17/stack-overflow-the-architecture-2016-edition/
Stack Overflow: https://uk.wikipedia.org/wiki/Stack_Overflow
 
4 ВИСНОВКИ
Stack Overflow, як платформа для програмістів, за роки свого існування стала важливим етапом у навчанні та кар'єрному зростанні багатьох талановитих людей. Попри новітні тренди мікросервісної архітектури та інші підходи до побудови систем, Stack Overflow продовжує залишатися надзвичайно ефективною монолітною платформою. Розробники цього ресурсу вкотре демонструють, що правильний вибір інструментів і грамотна оптимізація можуть створити систему, яка не поступається сучасним мікросервісним рішенням, а в деяких аспектах навіть перевершує їх за продуктивністю та стабільністю.
 
ДОДАТОК А
Відеозапис та хронологічний опис

Відеозапис доповіді на YouTube: https://youtu.be/zw4JAnlOu4o
Хронологічний опис відеозапису:
0:00 - Вступ
0:20 - Що таке Stack Overflow?
1:26 - Загальний огляд архітектури Stack Overflow
2:36 - Чому саме монолітна архітектура?
3:26 - Секрет ефективності
4:28 - Масштаби Stack Overflow
5:04 - Стек технологій Stack Overflow
6:25 - База даних
6:59 - Підсумок
7:34 - Використані джерела

Посилання на GitHub репозиторій: https://github.com/NureBiletskyiDanylo/apz-pzpi-22-6-biletskyi-danylo/tree/main/Pract2

 
ДОДАТОК Б
Слайди презентації

 
Рисунок Б.1 – Титульний слайд

 
Рисунок Б.2 – Що таке Stack Overflow

 
Рисунок Б.3 – Загальний огляд архітектури Stack Overflow

 
Рисунок Б.4 – Чому саме монолітна архітектура

 
Рисунок Б.5 – Секрет ефективності Stack Overflow

 
Рисунок Б.6 – Масштаби Stack Overflow

 
Рисунок Б.7 – Стек технологій Stack Overflow

 
Рисунок Б.8 – База даних

 
Рисунок Б.9 – Підсумок

 
Рисунок Б.10 – Використані джерела
